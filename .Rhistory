ggplot(bechdel, aes(x = binary ,
y = budget)) +
geom_col(aes(fill = binary), width =0.1 )
ggplot(data = bechdel,aes(x = factor(1),
fill = binary))+
geom_bar(width = 1)
ggplot(data = bechdel,aes(x = factor(1),
fill = binary))+
geom_bar(width = 1) + coord_polar("y")
ggplot(data = bechdel,aes(x = factor(1),
fill = binary))+
geom_bar(width = 1) +
coord_polar("y")+theme_void()
# create new dataframe
binary_data <- bechdel %>%
count(binary) %>%
mutate(percent = (n / sum(n)) * 100)
ggplot(binary_data, aes(x = "", y = percent, fill = binary)) +
geom_bar(width = 1, stat = "identity", color = "white") +
# convert barplot to polar coordinates
coord_polar("y", start = 0) +
# add labels
geom_text(aes(label = paste0(round(percent, 2), "%")), position = position_stack(vjust = 0.5), color = "red") +
# add color scale manually
scale_fill_manual(values = c("#55DDE0", "#F6AE2D")) +
theme_void()
bechdel %>% count(year)%>%ggplot() +
geom_point(mapping = aes(x = year, y = n)) +
geom_line(mapping = aes(x = year, y = n))
bechdel %>% count(year)%>%ggplot() +
geom_point(mapping = aes(x = year, y = n),color = "red") +
geom_line(mapping = aes(x = year, y = n), color = "blue")
ggplot(data = bechdel,aes(x = binary))+
geom_bar(aes(fill = binary)) +
labs(title = "Graph title",
x = "X-axis",
y = "Y-axis",
caption = "data source: xyz")
ggplot(data = bechdel,aes(x = clean_test))+
geom_bar(aes(fill = clean_test))+ labs(title = "praaaa",
x = "x-axis",
y = "y-axis",
caption = "data source:anna")
ggplot(data = bechdel,aes(x = test))+
geom_bar(aes(fill = test))
ggplot(data = bechdel,aes(x = test))+
geom_bar(aes(fill = test)) +
theme(axis.text.x = element_text(angle = 60))
ggplot(data = bechdel,aes(x = test))+
geom_bar(aes(fill = test)) +coord_flip()
ggplot(data = bechdel,aes(x = test))+
geom_bar(aes(fill = test)) +
theme(axis.text.x = element_text(angle =45 ))
ggplot(data = bechdel) +
geom_bar(mapping = aes(
x = clean_test,
fill = clean_test
)) +
guides(fill = FALSE)
ggplot(data = bechdel) +
geom_bar(aes(x = clean_test,
fill = clean_test)) +
theme(legend.position = "top")
ggplot(data = bechdel) +
geom_bar(mapping = aes(x = clean_test,
fill = clean_test))+
labs(fill = "Clean Test")
bechdel %>% count(clean_test) %>% ggplot() +
geom_col(aes(x=clean_test,y=n,fill= clean_test)) +
geom_label(aes(x= clean_test, y = n, label = n)) +
labs(title = "Barplot of clean test", y = "Count")
bechdel %>% count(clean_test) %>% ggplot() +
geom_col(aes(x=reorder(clean_test,-n),y=n,fill= clean_test)) +
geom_label(aes(x= clean_test, y = n, label = n)) +
labs(title = "Distribution of clean test", y = "Count",x = "")
bechdel %>% count(clean_test) %>% ggplot() +
geom_col(aes(x=reorder(clean_test,-n),y=n,fill= clean_test)) +
geom_label(aes(x= clean_test, y = n, label = n)) +
labs(title = "Distribution of clean test", y = "Count",x = "")+
`````{r}
?scale_color_brewer
?scale_color_brewer
ggplot(data = bechdel, aes(x = clean_test)) +
geom_bar(aes(fill = clean_test)) +
scale_fill_brewer(palette = "Dark2")
ggplot(data = bechdel, aes(x = clean_test)) +
geom_bar(aes(fill = clean_test)) +
scale_fill_brewer(palette = "Set1")
ggplot(data = bechdel, aes(x = clean_test)) +
geom_bar(aes(fill = clean_test)) +
scale_fill_brewer(palette = "BuGn" )
ggplot(data = bechdel, aes(x = clean_test)) +
geom_bar(aes(fill = clean_test)) +
scale_fill_manual(values = c("#55DDE0", "#33658A", "#2F4858", "#F6AE2D", "#F26419"))
ggplot(data = bechdel) +
geom_point(mapping = aes(x = budget, y = domgross, color = clean_test))
ggplot(data = bechdel) +
geom_point(mapping = aes(x = budget, y = domgross, color = clean_test)) +
facet_wrap(~ clean_test)
ggplot(data = bechdel) +
geom_point(mapping = aes(x = budget, y = domgross, color = clean_test)) +
facet_grid(decade_code ~ clean_test)
ggplot(data = bechdel) +
geom_point(mapping = aes(x = budget, y = intgross, color = clean_test)) +
theme_grey()
ggplot(data = bechdel) +
geom_point(mapping = aes(x = budget, y = intgross, color = clean_test)) +
theme_minimal()
ggplot(data = bechdel) +
geom_point(mapping = aes(x = budget, y = intgross, color = clean_test))
ggplot(data = bechdel,aes(x = clean_test)) +
geom_bar(aes(fill = clean_test))
# assign the ggplot graph to myplot variable
myplot <- bechdel %>% count(clean_test) %>% ggplot() +
# plot barplot
geom_col(aes(x=reorder(clean_test,n),y=n,fill= clean_test)) +
# adding labels to plot
geom_label(aes(x= clean_test, y = n, label = n)) +
# adding title and edit xaxis and y axis
labs(title = "Distribution of clean test", y = "Count", x= "",fill="Clean Test")+
scale_fill_brewer(palette = "Set1")+
# use theme minimal
theme_minimal()
myplot
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
library(ggplot2)
heart <- read_csv("./data/heart_disease.csv")
mean(heart$age)
mean(heart$age)
median(heart$age)
# function for finding mode value
mode_find <- function(data){
# counts the value
count <- table(data)
# find the value with maximum frequency
mode_value <- names(count)[which(count == max(count))
return(mode_value)
# function for finding mode value
mode_find <- function(data){
# counts the value
count <- table(data)
# find the value with maximum frequency
mode_value <- names(count)[which(count == max(count))
return(mode_value)
# function for finding mode value
mode_find <- function(data){
# counts the value
count <- table(data)
# find the value with maximum frequency
mode_value <- names(count)[which(count == max(count))]
return(mode_value)
}
mode_find(heart$thal)
# function for finding mode value
mode_find <- function(data){
# counts the value
count <- table(data)
# find the value with maximum frequency
mode_value <- names(count)[which(count == max(count))]
return(mode_value)
}
mode_find(heart$thal_test)
# function for finding mode value
mode_find <- function(data){
# counts the value
count <- table(data)
# find the value with maximum frequency
mode_value <- names(count)[which(count == max(count))]
return(mode_value)
}
mode_find(heart$thal_test)
table(thal_test)
table(heart$thal_test)
mean(heart$serum_colestrol)
mean(heart$serum_cholestrol)
mean(heart$serum_cholestrol)
median(heart$serum_cholestrol)
mean(heart$serum_cholesterol)
median(heart$serum_cholesterol)
mode_find(heart$chest_pain_type)
range(heart$age)
min(heart$max_heart_rate)
max(heart$max_heart_rate)
IQR(heart$age)
quantile(heart$resting_blood_pressure)
range(heart$serum_cholesterol)
IQR(heart$serum_cholesterol)
range(heart$max_heart_rate)
print("inter quartile range:")
IQR(heart$max_heary_rate)
print("inter quartile range:")
IQR(heart$max_heart_rate)
var(heart$resting_blood_pressure)
sd(heart$resting_blood_pressure)
var(heart$age)
sd(heart$age)
var(heart$serum_cholesterol)
sd(heart$serum_cholesterol)
ggplot(heart,aes(x = age))+
geom_histogram()
ggplot(heart,aes(x = age))+
geom_density()
qqnorm(heart$age)
qqline(heart$age)
shapiro.test(heart$age)
shapiro.test(heart$age)
ggplot(heart,aes(x =resting_blood_pressure ))+
geom_density()
qqnorm(heart$resting_blood_pressure)
qqline(heart$resting_blood_pressure)
shapiro.test(heart$resting_blood_pressure)
ggplot(heart,aes(x =max_heart_rate ))+
geom_density()
qqnorm(heart$max_heart_rate)
qqline(heart$max_heart_rate)
shapiro.test(heart$max_heart_rate)
library(moments)
kurtosis(heart$age)
summary(heart)
str(heart)
ttest_max_heart <-t.test(heart$resting_blood_pressure, mu = 120)
ttest_max_heart
t.test(heart$max_heart_rate, mu =90)
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE
)
highest_cases_2070
names(dengue_table)
library(purrr)
path <- "./data/dengue_np.xlsx"
province_df <- path %>%
excel_sheets() %>%
set_names() %>%
map_df(read_excel,
path=path,
.id="province")
library(readxl)
library(dplyr)
library(tidyr)
library(tidyverse)
nepal_province
np_province <- nepal_province %>%
pivot_longer(cols =2:8,
names_to = "year",
values_to ="cases")
np_province
library(purrr)
path <- "./data/dengue_np.xlsx"
province_df <- path %>%
excel_sheets() %>%
set_names() %>%
map_df(read_excel,
path=path,
.id="province")
province_df
final_prov_data <-  province_df%>%
pivot_longer(cols =3:9,
names_to = "year",
values_to ="cases")
final_prov_data
library(purrr)
path <- "./data/dengue_np.xlsx"
province_df <- path %>%
excel_sheets() %>%
set_names() %>%
map_df(read_excel,
path=path,
.id="Province")
province_df
final_prov_data <-  province_df%>%
pivot_longer(cols =3:9,
names_to = "year",
values_to ="cases")
final_prov_data
final_prov_data %>%
# filters by the year column
filter(year== 2072) %>%
# group by the province column
group_by(province)%>%
# count the cases of dengue for each province in dengue_case column
summarise(dengue_case = sum(cases)) %>%
# pass all these values to the ggplot function
ggplot(aes(x=reorder(province,-dengue_case),y=dengue_case))+
geom_col(aes(fill= province)) +
guides(fill=FALSE) +labs(x = "",y="Dengue Cases")+
theme_classic()
final_prov_data %>%
# filters by the year column
filter(year== 2072) %>%
# group by the province column
group_by(Province)%>%
# count the cases of dengue for each province in dengue_case column
summarise(dengue_case = sum(cases)) %>%
# pass all these values to the ggplot function
ggplot(aes(x=reorder(province,-dengue_case),y=dengue_case))+
geom_col(aes(fill= province)) +
guides(fill=FALSE) +labs(x = "",y="Dengue Cases")+
theme_classic()
final_prov_data %>%
# filters by the year column
filter(year== 2072) %>%
# group by the province column
group_by(Province)%>%
# count the cases of dengue for each province in dengue_case column
summarise(dengue_case = sum(cases)) %>%
# pass all these values to the ggplot function
ggplot(aes(x=reorder(province,-dengue_case),y=dengue_case))+
geom_col(aes(fill= province)) +
guides(fill=FALSE) +labs(x = "",y="Dengue Cases")+
theme_classic()
final_prov_data %>%
# filters by the year column
filter(year== 2072) %>%
# group by the province column
group_by(Province)%>%
# count the cases of dengue for each province in dengue_case column
summarise(dengue_case = sum(cases)) %>%
# pass all these values to the ggplot function
ggplot(aes(x=reorder(Province,-dengue_case),y=dengue_case))+
geom_col(aes(fill= province)) +
guides(fill=FALSE) +labs(x = "",y="Dengue Cases")+
theme_classic()
final_prov_data %>%
# filters by the year column
filter(year== 2072) %>%
# group by the province column
group_by(Province)%>%
# count the cases of dengue for each province in dengue_case column
summarise(dengue_case = sum(cases)) %>%
# pass all these values to the ggplot function
ggplot(aes(x=reorder(Province,-dengue_case),y=dengue_case))+
geom_col(aes(fill= Province)) +
guides(fill=FALSE) +labs(x = "",y="Dengue Cases")+
theme_classic()
# take the np_ptovince dataframe
highest_cases_2070<- final_prov_data %>%
# select the 2070 year data
filter(year==2070) %>%
# select the year column
select(-year) %>%
# arrange the data according to the cases
arrange(desc(cases))
# head(highest_cases_2070)
# plotting
myplot<-highest_cases_2070 %>%
arrange(-cases)%>% head(10)%>%
ggplot(aes(x=reorder(District,-cases), y= cases, fill= District))+
geom_bar(stat= "identity")+
labs(titile="Highest cases of dengue in 2070",
x = "Districts",
y = "No. of cases")+
coord_flip()+
guides(fill=FALSE)+
theme_classic()
highest_cases_2070
names(dengue_table)
View(final_prov_data)
p_name <-names(final_prov_data)[3:9]
names(final_prov_data)
d_table <- final_prov_data%>%
group_by(province) %>%
summarise_at(p_names, sum=)
p_name <-names(final_prov_data)[3:9]
names(final_prov_data)
d_table <- final_prov_data%>%
group_by(Province) %>%
summarise_at(p_names, sum=)
p_name <-names(final_prov_data)[3:9]
names(final_prov_data)
d_table <- final_prov_data%>%
group_by(Province) %>%
summarise_at(p_name, sum=)
p_name <-names(final_prov_data)[3:9]
names(final_prov_data)
d_table <- final_prov_data%>%
group_by(Province) %>%
summarise_at(p_name, sum)
names(final_prov_data)
library(purrr)
path <- "./data/dengue_np.xlsx"
province_df <- path %>%
excel_sheets() %>%
set_names() %>%
map_df(read_excel,
path=path,
.id="Province")
province_df
final_prov_data <-  province_df%>%
pivot_longer(cols =3:9,
names_to = "year",
values_to ="cases")
final_prov_data
# take the np_ptovince dataframe
highest_cases_2070<- final_prov_data %>%
# select the 2070 year data
filter(year==2070) %>%
# select the year column
select(-year) %>%
# arrange the data according to the cases
arrange(desc(cases))
myplot<-highest_cases_2070 %>%
arrange(-cases)%>% head(10)%>%
ggplot(aes(x=reorder(District,-cases), y= cases, fill= District))+
geom_bar(stat= "identity")+
labs(titile="Highest cases of dengue in 2070",
x = "Districts",
y = "No. of cases")+
coord_flip()+
guides(fill=FALSE)+
theme_classic()
p_name <- names(final_prov_data)[3:9]
names(final_prov_data)
names(final_prov_data)
final_prov_data
final_prov_data
final_prov_data
library(purrr)
path <- "./data/dengue_np.xlsx"
province_df <- path %>%
excel_sheets() %>%
set_names() %>%
map_df(read_excel,
path=path,
.id="Province")
province_df
final_prov_data <-  province_df%>%
pivot_longer(cols =3:9,
names_to = "year",
values_to ="cases")
final_prov_data
final_prov_data
names(final_prov_data)
p_name <- names(final_prov_data)[3:9]
names(final_prov_data)
d_table<- pivot_wider(final_prov_data,
names_from = "year",
values_from = "cases") %>%
unnest()
d_table
d_table
names(final_prov_data)
p_name <- names(final_prov_data)[3:9]
names(final_prov_data)
p_name <- names(d_table)[3:9]
names(d_table)
d_table
d_table <- final_prov_data%>%
group_by(Province) %>%
summarise_at(p_name, sum)
names(d_table)
p_name <- names(d_table)[3:9]
names(d_table)
d_table
p_name <- names(d_table)[3:9]
names(d_table)
d_table
p_table <- d_table %>%
group_by(Province) %>%
summarise_at(p_name, sum)
p_table
p_table
load("C:/Users/dell/Desktop/tidyweek/tidyweek.Rproj")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
library(ggplot2)
heart <- read_csv("./data/heart_disease.csv")
sd(heart$resting_blood_pressure)
var(heart$age)
sd(heart$age)
t.test(heart$max_heart_rate, mu =90)
male_max<- heart %>% filter(sex == "male")
female_max <- heart %>% filter(sex == "female")
t.test(male_max$max_heart_rate,female_max$max_heart_rate, var.equal = TRUE, paired = FALSE)
# creating random data
set.seed(123);
before <- rnorm(100, mean=2, sd=1);
after <- rnorm(100, mean=3, sd=1);
data <- data.frame(before, after);
t.test(data$before, data$after, paired=TRUE);
chisq_chest_heart <- chisq.test(heart$chest_pain_type, heart$heart_disease)
chisq_chest_heart
fisher.test(heart$chest_pain_type, heart$heart_disease)
chisq_chest_heart <- chisq.test(heart$chest_pain_type, heart$heart_disease)
chisq_chest_heart
chisq_chest_heart$observed
chisq_chest_heart$expected
fisher.test(heart$chest_pain_type, heart$heart_disease)
chisq_sex_heart <-chisq.test(heart$sex, heart$heart_disease)
chisq_sex_heart
cor(heart$age,heart$max_heart_rate)
ggplot(heart)+ geom_point(aes(age, max_heart_rate))+theme_minimal()
countdown(minutes = 2,top = 0)
# correlation between resting_blood_pressure and max_heart_rate
cor(heart$,heart$)
# correlation between resting_blood_pressure and max_heart_rate
cor(heart$resting_blood_pressure,heart$max_heart_rate)
# correlation between serum_cholesterol and age
cor(heart$serum_cholesterol, heart$age)
# correlation between serum_cholesterol and age
cor(heart$serum_cholesterol, heart$age)
ggplot(heart)+ geom_point(aes(age, max_heart_rate))+ geom_smoot(aes(age, max_heart_rate),method="lm", se=FALSE)
ggplot(heart)+ geom_point(aes(age, max_heart_rate))+ geom_smoot(aes(age, max_heart_rate),method="lm", se=FALSE)
ggplot(heart)+ geom_point(aes(age, max_heart_rate))+ geom_smooth(aes(age, max_heart_rate),method="lm", se=FALSE)
+theme_minimal()
ggplot(heart)+ geom_point(aes(age, max_heart_rate))+ geom_smooth(aes(age, max_heart_rate),method="lm", se=FALSE)
+ theme_minimal()
ggplot(heart)+ geom_point(aes(age, max_heart_rate))+ geom_smooth(aes(age, max_heart_rate),method="lm", se=FALSE) + theme_minimal()
